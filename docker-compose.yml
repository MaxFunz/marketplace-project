version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      SMTP_USER: "kurn0sovm@yandex.ru"
      SMTP_PASSWORD: "xTOYS?eY/K2U9nJ?"
      DATABASE_URL: "postgresql+asyncpg://postgres:postgres@127.0.0.1:5432/mydatabase"
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - app-network

  email-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command: python app/email_consumer.py
    depends_on:
      - kafka
      - web
    environment:
      SMTP_SERVER: "smtp.yandex.ru"
      SMTP_PORT: 587
      SMTP_USER: "kurn0sovm@yandex.ru"
      SMTP_PASSWORD: "xTOYS?eY/K2U9nJ?"
      EMAIL_FROM: "kurn0sovm@yandex.ru"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 127.0.0.1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
